% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ILP.R
\name{createAndSolveILPs}
\alias{createAndSolveILPs}
\title{Create and solve ILPs (integer linear programs) for maximizing an objective function over input phenotypes
The first numSNPs columns of the input table are assumed to be the SNPs of interest; the rest are assumed to be phenotypes
The value of objective can be "agreement" or "covariance"
The value of type can be "CNF" (conjunctive normal form) or "DNF" (disjunctive normal form)
The value of K determines the maximum allowed number of combinations in the output
The value of L determines the maximum allowed number of elements in a combination
If complement =  1 or 2, the genotypes  are augmented with their negation (col name prefix "NOT") before processing starts.
If complement = -1 or 2, the phenotypes are augmented with their negation (col name prefix "NOT") before processing starts.
baseFilename is used for storing the boundary when p-value constraints are present; the index is used for distinguishing them
If strata = TRUE, the Cochran-Mantel-Haenszel statistic is computed to correct for association with the single best phenotype
extremeValue is a log p-value upper bound, above which any solution found is declared infeasible; this leads to default results
The program assumes that there may be NAs in the genotypes, but NOT in the phenotypes; if that is not the case it will fail!
The NAs in each individual genotype are removed, alongside the corresponding phenotype rows, during the preprocessing stage
The return value is a list with two components; the first one is a table of statistics which includes the optimal formulas,
and the second one is a matrix containing the complex phenotypes corresponding to each of these formulas, which may be empty
If outputAssociations = TRUE, then the output additionally contains the matrix of single genotype - phenotype associations}
\usage{
createAndSolveILPs(
  inputTab,
  numSNPs = 1,
  objective = "agreement",
  type = "CNF",
  K = 3,
  L = 3,
  complement = 2,
  baseFilename = NULL,
  index = 0,
  outputAssociations = FALSE,
  strata = TRUE,
  extremeValue = log(MAX_P)
)
}
\description{
Create and solve ILPs (integer linear programs) for maximizing an objective function over input phenotypes
The first numSNPs columns of the input table are assumed to be the SNPs of interest; the rest are assumed to be phenotypes
The value of objective can be "agreement" or "covariance"
The value of type can be "CNF" (conjunctive normal form) or "DNF" (disjunctive normal form)
The value of K determines the maximum allowed number of combinations in the output
The value of L determines the maximum allowed number of elements in a combination
If complement =  1 or 2, the genotypes  are augmented with their negation (col name prefix "NOT") before processing starts.
If complement = -1 or 2, the phenotypes are augmented with their negation (col name prefix "NOT") before processing starts.
baseFilename is used for storing the boundary when p-value constraints are present; the index is used for distinguishing them
If strata = TRUE, the Cochran-Mantel-Haenszel statistic is computed to correct for association with the single best phenotype
extremeValue is a log p-value upper bound, above which any solution found is declared infeasible; this leads to default results
The program assumes that there may be NAs in the genotypes, but NOT in the phenotypes; if that is not the case it will fail!
The NAs in each individual genotype are removed, alongside the corresponding phenotype rows, during the preprocessing stage
The return value is a list with two components; the first one is a table of statistics which includes the optimal formulas,
and the second one is a matrix containing the complex phenotypes corresponding to each of these formulas, which may be empty
If outputAssociations = TRUE, then the output additionally contains the matrix of single genotype - phenotype associations
}
